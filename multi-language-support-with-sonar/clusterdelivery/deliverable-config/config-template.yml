apiVersion: carto.run/v1alpha1
kind: ClusterConfigTemplate
metadata:
  name: config-deliverable-template
spec:
  configPath: .data
  ytt: |
    #@ load("@ytt:data", "data")
    #@ load("@ytt:yaml", "yaml")

    #@ def has_git_params():
    #@   if 'gitops_repository_prefix' in data.values.params:
    #@     return True
    #@   end
    #@
    #@   if 'gitops_repository' in data.values.params:
    #@     return True
    #@   end
    #@
    #@   return False
    #@ end

    #@ def is_gitops():
    #@   return has_git_params()
    #@ end


    #@ def param(key):
    #@   if not key in data.values.params:
    #@     return None
    #@   end
    #@   return data.values.params[key]
    #@ end

    #@ def strip_trailing_slash(some_string):
    #@   if some_string[-1] == "/":
    #@     return some_string[:-1]
    #@   end
    #@   return some_string
    #@ end

    #@ def deliverable():
    apiVersion: carto.run/v1alpha1
    kind: Deliverable
    metadata:
      name: #@ data.values.deliverable.metadata.name
      namespace: #@ data.values.deliverable.metadata.namespace
      labels: 
         app.kubernetes.io/component: deliverable
         app.tanzu.vmware.com/deliverable-type: web
         app.tanzu.vmware.com/delivery-commit-sha: #@ data.values.source.revision.replace("/", "_")
    spec:
      #@ if/end hasattr(data.values.deliverable.spec, "serviceAccountName"):
      serviceAccountName: #@ data.values.deliverable.spec.serviceAccountName

      params:
        - name: "gitops_ssh_secret"
          value: #@ param("gitops_ssh_secret")
        - name: "gitops_sub_path"
          value: #@ "config/" + data.values.deliverable.metadata.namespace + "/" + data.values.deliverable.metadata.name

      source:
        git:
          url: #@ data.values.deliverable.spec.source.git.url
          ref:
            branch: main
    #@ end

    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: #@ data.values.deliverable.metadata.name + "-deliverable"
      labels:
        app.kubernetes.io/component: config
    data:
      #@yaml/text-templated-strings
      (@= data.values.deliverable.metadata.name @)-(@= data.values.deliverable.metadata.namespace @)-deliverable.yml: #@ yaml.encode(deliverable())